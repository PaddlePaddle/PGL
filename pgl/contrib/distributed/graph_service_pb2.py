# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: graph_service.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='graph_service.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x13graph_service.proto\"\x1a\n\x08NodeList\x12\x0e\n\x06nodeid\x18\x01 \x03(\x03\"^\n\x16SampleNeighborsRequest\x12\x1f\n\x0csample_nodes\x18\x01 \x01(\x0b\x32\t.NodeList\x12\x10\n\x08max_size\x18\x02 \x01(\x05\x12\x11\n\tedge_type\x18\x03 \x01(\t\"O\n\x14SampleNeighborsReply\x12\x19\n\x06nodeid\x18\x01 \x01(\x0b\x32\t.NodeList\x12\x1c\n\tneighbors\x18\x02 \x03(\x0b\x32\t.NodeList\"i\n\x12SampleNodesRequest\x12\x12\n\nbatch_size\x18\x01 \x01(\x05\x12\x0f\n\x07shuffle\x18\x02 \x01(\x08\x12\x0c\n\x04rank\x18\x03 \x01(\x05\x12\r\n\x05nrank\x18\x04 \x01(\x05\x12\x11\n\tnode_type\x18\x05 \x01(\t\"3\n\x10SampleNodesReply\x12\x1f\n\x0csample_nodes\x18\x01 \x01(\x0b\x32\t.NodeList\"\\\n\x15NegSampleNodesRequest\x12\x19\n\x06nodeid\x18\x01 \x01(\x0b\x32\t.NodeList\x12\x0f\n\x07neg_num\x18\x02 \x01(\x05\x12\x17\n\x0fneg_sample_type\x18\x03 \x01(\t\"6\n\x13NegSampleNodesReply\x12\x1f\n\x0csample_nodes\x18\x01 \x01(\x0b\x32\t.NodeList\".\n\x12GetNodeFeatRequest\x12\x18\n\x05nodes\x18\x01 \x01(\x0b\x32\t.NodeList\";\n\x10GetNodeFeatReply\x12\x18\n\x05nodes\x18\x01 \x01(\x0b\x32\t.NodeList\x12\r\n\x05value\x18\x02 \x01(\t\"\x12\n\x10NodeTypesRequest\"$\n\x0eNodeTypesReply\x12\x12\n\nnode_types\x18\x01 \x03(\t2\xbe\x02\n\x0cGraphService\x12\x43\n\x0fSampleNeighbors\x12\x17.SampleNeighborsRequest\x1a\x15.SampleNeighborsReply\"\x00\x12;\n\rNodeBatchIter\x12\x13.SampleNodesRequest\x1a\x11.SampleNodesReply\"\x00\x30\x01\x12@\n\x0eNegSampleNodes\x12\x16.NegSampleNodesRequest\x1a\x14.NegSampleNodesReply\"\x00\x12\x37\n\x0bGetNodeFeat\x12\x13.GetNodeFeatRequest\x1a\x11.GetNodeFeatReply\"\x00\x12\x31\n\tNodeTypes\x12\x11.NodeTypesRequest\x1a\x0f.NodeTypesReply\"\x00\x62\x06proto3'
)




_NODELIST = _descriptor.Descriptor(
  name='NodeList',
  full_name='NodeList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodeid', full_name='NodeList.nodeid', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=49,
)


_SAMPLENEIGHBORSREQUEST = _descriptor.Descriptor(
  name='SampleNeighborsRequest',
  full_name='SampleNeighborsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sample_nodes', full_name='SampleNeighborsRequest.sample_nodes', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_size', full_name='SampleNeighborsRequest.max_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='edge_type', full_name='SampleNeighborsRequest.edge_type', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=51,
  serialized_end=145,
)


_SAMPLENEIGHBORSREPLY = _descriptor.Descriptor(
  name='SampleNeighborsReply',
  full_name='SampleNeighborsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodeid', full_name='SampleNeighborsReply.nodeid', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='neighbors', full_name='SampleNeighborsReply.neighbors', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=147,
  serialized_end=226,
)


_SAMPLENODESREQUEST = _descriptor.Descriptor(
  name='SampleNodesRequest',
  full_name='SampleNodesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='batch_size', full_name='SampleNodesRequest.batch_size', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='shuffle', full_name='SampleNodesRequest.shuffle', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rank', full_name='SampleNodesRequest.rank', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nrank', full_name='SampleNodesRequest.nrank', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='node_type', full_name='SampleNodesRequest.node_type', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=228,
  serialized_end=333,
)


_SAMPLENODESREPLY = _descriptor.Descriptor(
  name='SampleNodesReply',
  full_name='SampleNodesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sample_nodes', full_name='SampleNodesReply.sample_nodes', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=335,
  serialized_end=386,
)


_NEGSAMPLENODESREQUEST = _descriptor.Descriptor(
  name='NegSampleNodesRequest',
  full_name='NegSampleNodesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodeid', full_name='NegSampleNodesRequest.nodeid', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='neg_num', full_name='NegSampleNodesRequest.neg_num', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='neg_sample_type', full_name='NegSampleNodesRequest.neg_sample_type', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=388,
  serialized_end=480,
)


_NEGSAMPLENODESREPLY = _descriptor.Descriptor(
  name='NegSampleNodesReply',
  full_name='NegSampleNodesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sample_nodes', full_name='NegSampleNodesReply.sample_nodes', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=482,
  serialized_end=536,
)


_GETNODEFEATREQUEST = _descriptor.Descriptor(
  name='GetNodeFeatRequest',
  full_name='GetNodeFeatRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodes', full_name='GetNodeFeatRequest.nodes', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=538,
  serialized_end=584,
)


_GETNODEFEATREPLY = _descriptor.Descriptor(
  name='GetNodeFeatReply',
  full_name='GetNodeFeatReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodes', full_name='GetNodeFeatReply.nodes', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='GetNodeFeatReply.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=586,
  serialized_end=645,
)


_NODETYPESREQUEST = _descriptor.Descriptor(
  name='NodeTypesRequest',
  full_name='NodeTypesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=647,
  serialized_end=665,
)


_NODETYPESREPLY = _descriptor.Descriptor(
  name='NodeTypesReply',
  full_name='NodeTypesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='node_types', full_name='NodeTypesReply.node_types', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=667,
  serialized_end=703,
)

_SAMPLENEIGHBORSREQUEST.fields_by_name['sample_nodes'].message_type = _NODELIST
_SAMPLENEIGHBORSREPLY.fields_by_name['nodeid'].message_type = _NODELIST
_SAMPLENEIGHBORSREPLY.fields_by_name['neighbors'].message_type = _NODELIST
_SAMPLENODESREPLY.fields_by_name['sample_nodes'].message_type = _NODELIST
_NEGSAMPLENODESREQUEST.fields_by_name['nodeid'].message_type = _NODELIST
_NEGSAMPLENODESREPLY.fields_by_name['sample_nodes'].message_type = _NODELIST
_GETNODEFEATREQUEST.fields_by_name['nodes'].message_type = _NODELIST
_GETNODEFEATREPLY.fields_by_name['nodes'].message_type = _NODELIST
DESCRIPTOR.message_types_by_name['NodeList'] = _NODELIST
DESCRIPTOR.message_types_by_name['SampleNeighborsRequest'] = _SAMPLENEIGHBORSREQUEST
DESCRIPTOR.message_types_by_name['SampleNeighborsReply'] = _SAMPLENEIGHBORSREPLY
DESCRIPTOR.message_types_by_name['SampleNodesRequest'] = _SAMPLENODESREQUEST
DESCRIPTOR.message_types_by_name['SampleNodesReply'] = _SAMPLENODESREPLY
DESCRIPTOR.message_types_by_name['NegSampleNodesRequest'] = _NEGSAMPLENODESREQUEST
DESCRIPTOR.message_types_by_name['NegSampleNodesReply'] = _NEGSAMPLENODESREPLY
DESCRIPTOR.message_types_by_name['GetNodeFeatRequest'] = _GETNODEFEATREQUEST
DESCRIPTOR.message_types_by_name['GetNodeFeatReply'] = _GETNODEFEATREPLY
DESCRIPTOR.message_types_by_name['NodeTypesRequest'] = _NODETYPESREQUEST
DESCRIPTOR.message_types_by_name['NodeTypesReply'] = _NODETYPESREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

NodeList = _reflection.GeneratedProtocolMessageType('NodeList', (_message.Message,), {
  'DESCRIPTOR' : _NODELIST,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:NodeList)
  })
_sym_db.RegisterMessage(NodeList)

SampleNeighborsRequest = _reflection.GeneratedProtocolMessageType('SampleNeighborsRequest', (_message.Message,), {
  'DESCRIPTOR' : _SAMPLENEIGHBORSREQUEST,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:SampleNeighborsRequest)
  })
_sym_db.RegisterMessage(SampleNeighborsRequest)

SampleNeighborsReply = _reflection.GeneratedProtocolMessageType('SampleNeighborsReply', (_message.Message,), {
  'DESCRIPTOR' : _SAMPLENEIGHBORSREPLY,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:SampleNeighborsReply)
  })
_sym_db.RegisterMessage(SampleNeighborsReply)

SampleNodesRequest = _reflection.GeneratedProtocolMessageType('SampleNodesRequest', (_message.Message,), {
  'DESCRIPTOR' : _SAMPLENODESREQUEST,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:SampleNodesRequest)
  })
_sym_db.RegisterMessage(SampleNodesRequest)

SampleNodesReply = _reflection.GeneratedProtocolMessageType('SampleNodesReply', (_message.Message,), {
  'DESCRIPTOR' : _SAMPLENODESREPLY,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:SampleNodesReply)
  })
_sym_db.RegisterMessage(SampleNodesReply)

NegSampleNodesRequest = _reflection.GeneratedProtocolMessageType('NegSampleNodesRequest', (_message.Message,), {
  'DESCRIPTOR' : _NEGSAMPLENODESREQUEST,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:NegSampleNodesRequest)
  })
_sym_db.RegisterMessage(NegSampleNodesRequest)

NegSampleNodesReply = _reflection.GeneratedProtocolMessageType('NegSampleNodesReply', (_message.Message,), {
  'DESCRIPTOR' : _NEGSAMPLENODESREPLY,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:NegSampleNodesReply)
  })
_sym_db.RegisterMessage(NegSampleNodesReply)

GetNodeFeatRequest = _reflection.GeneratedProtocolMessageType('GetNodeFeatRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETNODEFEATREQUEST,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:GetNodeFeatRequest)
  })
_sym_db.RegisterMessage(GetNodeFeatRequest)

GetNodeFeatReply = _reflection.GeneratedProtocolMessageType('GetNodeFeatReply', (_message.Message,), {
  'DESCRIPTOR' : _GETNODEFEATREPLY,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:GetNodeFeatReply)
  })
_sym_db.RegisterMessage(GetNodeFeatReply)

NodeTypesRequest = _reflection.GeneratedProtocolMessageType('NodeTypesRequest', (_message.Message,), {
  'DESCRIPTOR' : _NODETYPESREQUEST,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:NodeTypesRequest)
  })
_sym_db.RegisterMessage(NodeTypesRequest)

NodeTypesReply = _reflection.GeneratedProtocolMessageType('NodeTypesReply', (_message.Message,), {
  'DESCRIPTOR' : _NODETYPESREPLY,
  '__module__' : 'graph_service_pb2'
  # @@protoc_insertion_point(class_scope:NodeTypesReply)
  })
_sym_db.RegisterMessage(NodeTypesReply)



_GRAPHSERVICE = _descriptor.ServiceDescriptor(
  name='GraphService',
  full_name='GraphService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=706,
  serialized_end=1024,
  methods=[
  _descriptor.MethodDescriptor(
    name='SampleNeighbors',
    full_name='GraphService.SampleNeighbors',
    index=0,
    containing_service=None,
    input_type=_SAMPLENEIGHBORSREQUEST,
    output_type=_SAMPLENEIGHBORSREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='NodeBatchIter',
    full_name='GraphService.NodeBatchIter',
    index=1,
    containing_service=None,
    input_type=_SAMPLENODESREQUEST,
    output_type=_SAMPLENODESREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='NegSampleNodes',
    full_name='GraphService.NegSampleNodes',
    index=2,
    containing_service=None,
    input_type=_NEGSAMPLENODESREQUEST,
    output_type=_NEGSAMPLENODESREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetNodeFeat',
    full_name='GraphService.GetNodeFeat',
    index=3,
    containing_service=None,
    input_type=_GETNODEFEATREQUEST,
    output_type=_GETNODEFEATREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='NodeTypes',
    full_name='GraphService.NodeTypes',
    index=4,
    containing_service=None,
    input_type=_NODETYPESREQUEST,
    output_type=_NODETYPESREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_GRAPHSERVICE)

DESCRIPTOR.services_by_name['GraphService'] = _GRAPHSERVICE

# @@protoc_insertion_point(module_scope)
