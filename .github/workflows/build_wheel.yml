name: Build

on: [push, pull_request]


jobs:
  build_wheels:
    name: Build ${{ matrix.os }} wheels for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest' ]
        arch: [ 'x86_64' ]
        cibw_python: [ "cp*" ]
        include:
           - arch: aarch64
             cibw_python: cp36-*
             os: ubuntu-latest
           - arch: aarch64
             cibw_python: cp37-*
             os: ubuntu-latest
           - arch: aarch64
             cibw_python: cp38-*
             os: ubuntu-latest
           - arch: aarch64
             cibw_python: cp39-*
             os: ubuntu-latest
           - arch: aarch64
             cibw_python: cp310-*
             os: ubuntu-latest
           - arch: arm64
             cibw_python: "cp*"
             os: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          
      - uses: docker/setup-qemu-action@v1
        if: runner.os == 'Linux'
        name: Set up QEMU
      
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel
      
      - name: Build wheels for CPython
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_BUILD: "pip install -r requirements.txt cython>=0.29.21"
          CIBW_SKIP: "*-musllinux_*"
          CIBW_BEFORE_ALL_LINUX: >
            yum -y update &&
            yum install -y zlib-devel bzip2-devel lzo-devel
            
      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl
